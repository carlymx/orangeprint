###===========================================================###
# Esquema de Comandos Instalación Orangeprint.                  #
# Desc: Instalación Octoprint de cero, con entorno virtual.     #
# by Carlymx - 06-02-2018 # Ultima Actualización [02-04-2020]   #
# carlymx@gmail.com                                             #
###===========================================================###

'Descarga e Instalación'
	> Descargar versiones ARMbian en: https://www.armbian.com/download/
	> Instalar imagen ***.img a una microSD (minimo 4GBs) con RUFUS https://rufus.akeo.ie (probado con v2.18 https://rufus.akeo.ie/downloads/rufus-2.18p.exe ).
		> Crear Disco de arranque con: Imagen DD >Seleccionar xxx.img y Empezar


'Inicio del sitema por primera vez'
	# Pregunta por la contraseña de root '1234' y luego pide que la cambies por una nueva 'orangeprint'.
	# Pide el nombre para un nuevo usuario que llamaremos 'orangeprint' y contraseña 'orangeprint'.
	# Indica que 'orangeprint' es super usuario y pide reiniciar.


'Configuración del Sistema'
	
	'Conexion WIFI'
		sudo nmtui
		 > Activate a Connection > Sellecionar red WIFI > Contraseña
			
		nmcli d		# Comprobar correcta conexión.
		watch -n 1 cat /proc/net/wireless	# Calidad de la señal WIFI
		
	'Zona Horaria'
		sudo armbian-config
		 > Personal > Time Zone
		
	'Nombre del Dominio'
	sudo armbian-config
	 > Personal > Hostname > "orangeprint"

	'Idioma'
		sudo armbian-config
		 > Personal > Locales > [es_ES.UTF-8 UTF-8] > [es_ES.UTF-8]
		
		# Añadir al final del archivo
		sudo nano /etc/environment
			# File generated by update-locale
			LC_ALL="es_ES.UTF-8"
			LC_MESSAGES="es_ES.UTF-8"
			LANGUAGE="es_ES"
			LANG="es_ES.UTF-8"

		# Sustituir contenido archivo por:
		sudo nano /etc/default/locale
			# File generated by update-locale
			LC_ALL="es_ES.UTF-8"
			LC_MESSAGES="es_ES.UTF-8"
			LANGUAGE="es_ES"
			LANG="es_ES.UTF-8"

		# Crear archivo en '/var/lib/locales/supported.d/local' y poner:
		sudo mkdir /var/lib/locales/
		sudo mkdir /var/lib/locales/supported.d/
		sudo nano /var/lib/locales/supported.d/local
			es_ES.UTF-8 UTF-8
			en_US.UTF-8 UTF-8

	'Configurar Teclado'
		"IMPORTANTE: Conectar un Teclado Físico o no funcionara"
		sudo dpkg-reconfigure keyboard-configuration
		 > PC GENERICO 105 TECLAS > ESPAÑOL > ESPAÑOL > ALT DERECHO (AltGr) > CONTROL DERECHO
	 

	#### Notas del Sistema:
	#
	#	Solución a problemas conexión SSH por WIFI en Windows:
	#	Desactivar el uso de IPv6 en la OPI
		sudo nano /boot/cmdline.txt
			ipv6.disable = 1
		sudo /etc/init.d/networking restart
	#
	#	Temperatura CPU
		cat /sys/devices/virtual/thermal/thermal_zone0/temp
		cat /etc/armbianmonitor/datasources/soctemp
		armbianmonitor -m
	#	
	####


'Configurar Usuario'
	
	'Agregar usuario `orangeprint´ a Administradores'
	sudo usermod -a -G tty orangeprint
	sudo usermod -a -G dialout orangeprint
	sudo adduser orangeprint sudo

	'Activar el reinicio para este usuario'
	su orangeprint
	systemctl reboot -i
	
	'Cambiar privilegios'
	sudo visudo
		# Especificar privilegios de usuario al final del archivo.
		orangeprint ALL=(ALL:ALL) ALL
		orangeprint ALL=NOPASSWD: /sbin/shutdown
		orangeprint ALL=(ALL) NOPASSWD:ALL
	
	# O Activar (si no lo esta).
		>> #includedir /etc/sudoers.d
	# y añadir privilegios en:
	sudo nano /etc/sudoers.d/orangeprint
		
	'Agregar Nuevo Usuario'
	# En caso que se quiera o se necesite tener un tercer usuario, vasta con agregarlo:
	sudo adduser usuario
	
'Dependencias'

	'Instalar Dependencias'
	sudo apt update
	sudo apt upgrade
	sudo apt install python-pip python-dev python-setuptools python-virtualenv virtualenv git libyaml-dev build-essential psmisc
	sudo pip install -U pip
		# Para saber la versión de pip que tenemos:
		> sudo pip --version
        # Para saber las bibliotecas instaladas:
        > python -m pip list
        > python3 -m pip list
	
	# PYTHON 3 #
	# Desde el 1 de Enero del 2020 Python 2.7 a pasado a ser EOL [(leer articulo)](https://www.python.org/doc/sunset-python-2/)
	# Es necesario empezar a usar Python 3 con las instalaciones de Octoprint, pero actualmente muchos complementos pueden no ser compatibles para Python 3.
	'Instalar Dependencias Python 3'
	sudo apt install python3-pip python3-dev python3-setuptools python3-virtualenv
    sudo pip3 install -U pip
    sudo pip3 install virtualenv
	
	'Coexistencia Python2 y Python3'
	# Python2 (/usr/bin/python) tiene asignado el **alias** *python* y *python2*
	# Python3 (usr/bin/python3) tiene asignado el **alias** *python3*
	# Puede asignarse un nuevo alias con [```alias python=python3```][alias_python] y [```alias pip=pip3```][alias_pip], para hacerlo permanenete editar archivo '~/.bashrc':

        sudo nano ~/.bashrc
            # Al final del Archivo:
                #ALIAS PARA PYTHON Y PIP
                alias python="python3"
                alias pip="pip3"
    # Para comprobar la version:
    python -V
    pip -V
            
	
	'Acceder como usuario orangeprint'
	su orangeprint
	cd					# accedes al directorio personal directamente

	'Dependencia PySerial (Python 2.7)'
	wget https://pypi.python.org/packages/source/p/pyserial/pyserial-2.7.tar.gz
	tar -zxf pyserial-2.7.tar.gz
	cd pyserial-2.7
	sudo python setup.py install
	
    'Dependencias PySerial (Python 3)'
    sudo pip install pyserial==2.7

    'Dependencias PySerial (Python 3)'
    sudo pip install pyserial

	
'Instalacion Octoprint (servidor de impresión)'

	'Descarga Octoprint'
	cd
	git clone https://github.com/foosel/OctoPrint.git
	cd OctoPrint
    # Para Python 2
	    virtualenv venv		# Crear entorno Virtual
	# Para Python 3 [Entorno Virtual con Python3][virtual_python3]
        virtualenv -p /usr/bin/python3 --python=python3 venv

    sudo ./venv/bin/python setup.py install
	mkdir ~/.octoprint

		'**EXTRA: Actualizar octoprint (solo cuando proceda)**'
		cd ~/OctoPrint/
		git pull
		sudo ./venv/bin/python setup.py clean
		sudo ./venv/bin/python setup.py install

	'Iniciar por primera vez el Octoprint'
	~/OctoPrint/venv/bin/octoprint serve
	# Una vez comprobado que funciona accediendo por el navegador web a la IP de la OPI ( ej: xx.xx.xx.xx:5000)
    # Configure los parametros Iniciales
    'Access Control'
    Username:   orangeprint
    Password:   orangeprint
    ENABLE

    'Configure Anonymous Usage Tracking'
    DISABLE

    'Configure the connectivity check'
    ENABLE

    'Configure plugin blacklist processing'
    ENABLE  #Para python 3

    'Set up your printer profile'
    Al Gusto...
    
    'Server Commands'
    Restart Octoprint:  sudo service octoprint restart
    Restart System:     reboot
    Shutdown System:    poweroff
    
	# puede cerrarse el servidor octoprint para desbloquear el terminal pulsando 'CTrl+Z'
	
	'Inicio del Servidor Automaticamente'
    cd
	sudo cp ~/OctoPrint/scripts/octoprint.init /etc/init.d/octoprint
	sudo chmod +x /etc/init.d/octoprint
	sudo update-rc.d octoprint defaults
	
	sudo cp ~/OctoPrint/scripts/octoprint.default /etc/default/octoprint
		`Editar Ruta binario Octoprint`
			sudo nano /etc/default/octoprint
				# CUIDADO hay que activar (descomentar) y modificar las siguientes lineas
				# o si nos, no funcionara.
				OCTOPRINT_USER=orangeprint
				BASEDIR=/home/orangeprint/.octoprint
				CONFIGFILE=/home/orangeprint/.octoprint/config.yaml
				DAEMON=/home/orangeprint/OctoPrint/venv/bin/octoprint	
		
	Guardar y Reiniciar Sistema
	
	#### Notas sobre Octoprint:
	#
	# Comando control del servicio octoprint:
		sudo service octoprint start|stop|restart

	# Comando para saber el estado del servicio:
		systemctl status octoprint.service
		journalctl -xe
	
	# DEPENDENCIAS OCTOPRINT 1.3.6+ 
		FUTURES 3.1.1
		https://pypi.python.org/packages/cc/26/b61e3a4eb50653e8a7339d84eeaa46d1e93b92951978873c220ae64d0733/futures-3.1.1.tar.gz#md5=77f261ab86cc78efa2c5fe7be27c3ec8
		
		WRAPT 1.10.11
		https://pypi.python.org/simple/wrapt/
		https://pypi.python.org/packages/a0/47/66897906448185fcb77fc3c2b1bc20ed0ecca81a0f2f88eda3fc5a34fc3d/wrapt-1.10.11.tar.gz#md5=e1346f31782d50401f81c2345b037076
	
	#
	#####	
	

'Instalacion de Motion (servidor para WebCam)'
	# Repositorio GitHub: https://github.com/Motion-Project/motion
	# Guia Instalacion completa: https://github.com/Motion-Project/motion/blob/release-4.1/motion_guide.html
	# Guia version offline: https://motion-project.github.io/motion_guide.html
	
	'Previo'
	sudo apt update
	sudo apt upgrade
	lsusb					# Para saber si la WebCam esta conectada

	'Instalar Motion'
	# Se puede Instalar la versión del repositorio de Ubunto (acualmente la v3.2.12 del 2009, perfectamente funcional)
	# o Instalar la ultima version desde el repositorio de GitHub, que sera el caso.
	
		'Instalacion de Motion Repo de Ubuntu v3.2.12'
		sudo apt install motion
	
		'Instalacion de Motion Repo de GitHub v4.1.1'
		sudo apt install autoconf automake build-essential pkgconf libtool libzip-dev libjpeg-dev git libavformat-dev libavcodec-dev libavutil-dev libswscale-dev libavdevice-dev libmicrohttpd-dev
		cd ~ 
		git clone https://github.com/Motion-Project/motion.git 
		cd motion 
		autoreconf -fiv 
		./configure 
		make 
		sudo make install 
	
			## Una vez Instalado correctamente nos dira lo siguiente:
			## Install complete! The default configuration file, motion-dist.conf, has been
			## installed to /usr/local/etc/motion. You need to rename/copy it to motion.conf
			## for Motion to find it. More configuration examples as well as init scripts
			## can be found in /usr/local/share/motion/examples.

			
	'Configurar Motion'
	
	> Para +4.1
	
	sudo cp /usr/local/etc/motion/motion-dist.conf /usr/local/etc/motion/motion.conf
	sudo nano /usr/local/etc/motion/motion.conf
	## ¡¡ El archivo de configuración el a v+4.x.x ha sido simplificado pero motion tiene todos sus parametros con una variable por defecto.
	## Agregar lineas faltantes en el caso que se quiera modificar el defecto de la variable.
	## En la guia de instalación estan todas las variables.
	
		`Daemon`
			daemon on # --------------------------- Permite la auto-ejecución en el arranque del sistema 
		
		'Image Processing configuration parameters'
			v4l2_palette 15 # --------------------- Tipo de paleta de color soportada por tu WebCam, usar 'v4l2-ctl --list-formats-ext'
			width 640 # --------------------------- Resolucion (Ancho) usar 'uvcdynctrl -f'
			height 360 # -------------------------- Resolucion (Alto) usar 'uvcdynctrl -f'
			framerate 15 # ------------------------ Fps de la captura del video
			
		'Picture output configuration parameters'
		`Output pictures when motion is detected`
			output_pictures off # --------------- No Guardes imagenes
		
		'Movie output configuration parameters'
		`Create movies of motion events.`
			movie_output off # ---------- No Guardes Videos

		'Live stream configuration parameters'
		`Live Stream Server`
			stream_motion on #--------------------- Cuando no detecta movimiento ir a 1 fps
			stream_maxrate 12 #-------------------- Cuando detecta movimiento ir max 12 fps
			stream_localhost off #----------------- No restringir el streaming a equipo local
			
		'Webcontrol configuration parameters'
		`HTTP Based Control`
			webcontrol_port 8080 # ---------------- Puerto de acceso
			webcontrol_localhost off # ------------ Para poder acceder desde cualquier 
			webcontrol_html_output on # ----------- Para poder controlar y configurar el Motion por Web
			
						
	> Para v3.2.12 	
		
		sudo nano /etc/motion/motion.conf
		
		`Daemon`
			daemon on # --------------------------- Permite la auto-ejecución en el arranque del sistema 
		
		`Capture device options`
			v4l2_palette 15 # --------------------- Tipo de paleta de color soportada por tu WebCam, usar 'v4l2-ctl --list-formats-ext'
			width 640 # --------------------------- Resolucion (Ancho) usar 'uvcdynctrl -f'
			height 360 # -------------------------- Resolucion (Alto) usar 'uvcdynctrl -f'
			framerate 15 # ------------------------ Fps de la captura del video
			
		`Image File Ouput`
			output_pictures = off # --------------- No Guardes imagenes
		
		`FFMPEG related options`
			ffmpeg_output_movies = off # ---------- No Guardes Videos

		`Live Stream Server`
			stream_motion on #--------------------- Cuando no detecta movimiento ir a 1 fps
			stream_maxrate 12 #-------------------- Cuando detecta movimiento ir max 12 fps
			stream_localhost off #----------------- No restringir el streaming a equipo local

		`HTTP Based Control`
			webcontrol_port 8080 # ---------------- Puerto de acceso
			webcontrol_localhost off # ------------ Para poder acceder desde cualquier 
			webcontrol_html_output on # ----------- Para poder controlar y configurar el Motion por Web
	
	
	'Configurar inicio del servicio'
	
	> Para v4.1.x
	
		# Crear Usuario Motion
		sudo adduser motion #---------------------- Crea el usuario, seguir instrucciones, password= motion
		sudo adduser motion sudo #----------------- Da poderes administrativos al usuario.
		sudo usermod motion -G video #------------- ¡IMPORTANTE! Agrega al usuario al grupo de usuarios 'video' y lo establece omo primario.
		
		# Copiar y renombrar Script
		cp /usr/local/share/motion/examples/motion.init-Debian /etc/int.d/motion
		
		# Añadir a lista de tareas el Inicio del Servicio Motion al reiniciar.
		sudo crontab -e
		@reboot sudo /etc/init.d/motion start
	
	> Para v3.2.12
	
	sudo nano /etc/default/motion

		# Para que el servicio pueda iniciarse debemos cambiar esta opción a 'yes'
		start_motion_daemon = yes
	
	sudo service motion start


	
	#### Notas sobre Motion:

	# Para configurar y controlar el Motion acceder por web:
		http://192.168.0.105:8080
	
	# Control del Servicio Motion
		sudo service motion start|stop|restart
	
	> Para 3.2.12
		# Motion guarda por defecto vídeos e imágenes en /var/bin/motion/motion
		# Para saber el tamaño que ocupa ese directorio:
			du -shc /var/lib/motion/
		
		# Para borrar el contenido:
			sudo rm -r /var/lib/motion/

	# Utilidades para saber los formatos y Resoluciones soportadas por nuestra Webcam:
		sudo apt install v4l-utils libv4l-0
			v4l2-ctl
			v4l2-ctl --all
			v4l2-ctl --list-formats
			v4l2-ctl --list-formats-ext
	
		sudo apt install uvcdynctrl
			uvcdynctrl -f	# Lista Resoluciones soportadas por la WebCam de manera nativa (por Hardware)
			uvcdynctrl -l
	#
	####
	
'Servidor SAMBA (compartir directorios con la Red)'
	
	'Instalar Samba'
	sudo apt install isc-dhcp-client samba samba-common-bin
		
	'Crear directorios a compartir'	
	mkdir /home/orangeprint/share
		
	'Configurar Samba'
	sudo nano /etc/samba/smb.conf
		
		`Global`
		wins support = yes
		
		`Share Definitions`		# Al final del archivo:

    #####################################
    #       Directorios Compartidos     #
    #####################################
		[opiz_share]
		comment= Carpeta compartida
		path= /home/orangeprint/share
		browseable= Yes
		writeable= Yes
		read only = no
		guest ok = Yes
		only guest= no
		create mask= 0777
		directory mask= 0777
		public= no
		write list = root, orangeprint

		[opiz_upload]
		comment= Carpeta Upload STLs
		path= /home/orangeprint/.octoprint/uploads
		browseable= Yes
		writeable= Yes
		read only = no
		guest ok = Yes
		only guest= no
		create mask= 0777
		directory mask= 0777
		public= no
		write list = root, orangeprint

		[timelapse]
		comment= camara timelapses
		path= /home/orangeprint/.octoprint/timelapse
		browseable= Yes
		writeable= Yes
		read only = no
		guest ok = Yes
		only guest= no
		create mask= 0777
		directory mask= 0777
		public= no
		write list = root, orangeprint
			
	'Poner una contraseña al usuario'
	sudo smbpasswd -a root
        password:   orangeprint	
    sudo smbpasswd -a orangeprint
        password:   orangeprint	

	'Reiniciar servidor Samba'
	sudo service smbd restart
	

'Acceder a directorio externo'	
	
	sudo apt install cifs-utils nfs-common
	
	mkdir /home/orangeprint/.octoprint/uploads/shared
	chmod 777 /home/orangeprint/.octoprint/uploads/shared
	
	'Modo simple'
	sudo nano /etc/fstab
		//192.168.0.000/directorio_compartido /home/orangeprint/.octoprint/uploads/shared cifs user=USERNAME,password=PASSWORD,noexec,user,rw,nounix,iocharset=utf8 0 0


'GPIO: control de Relés para encender y apagar la Impresora'

    ## Hechar un vistazo al nuevo repositorio del fabricante de la OrangePi
        ##  https://github.com/orangepi-xunlong/wiringOP  ##

	'WIRINGOP (MPU H3 y H5)'
	# https://github.com/kazukioishi/WiringOP
	
		`Instalacion`
		"OPI H3:"	git clone https://github.com/kazukioishi/WiringOP.git -b h3
		"OPI H5:"	git clone https://github.com/kazukioishi/WiringOP.git -b h5
				
			cd WiringOP
			chmod +x ./build
			sudo ./build

	'WIRINGOP-Zero (MPU H2)'
	# https://github.com/xpertsavenue/WiringOP-Zero
		`Instalacion`
		"OPI H2 (Zero):"	git clone https://github.com/xpertsavenue/WiringOP-Zero.git
			
			cd WiringOP-Zero
			chmod +x ./build
			sudo ./build
					
	'Test'
	# Muestra tabla ASCII GPIO
	gpio readall
	# Activar Led Rojo de la Placa
	gpio write 30 1

		 ###===========Ejemplo de la respuesta del comando 'gpio readall'=============###
		 #						Para una Orange Pi Zero H2+								#
		 +																				+
		 +-----+-----+----------+------+--Orange Pi Zero--+---+------+---------+-----+--+
		 | H2+ | wPi |   Name   | Mode | V | Physical | V | Mode | Name     | wPi | H2+ |
		 +-----+-----+----------+------+---+----++----+---+------+----------+-----+-----+
		 |     |     |     3.3v |      |   |  1 || 2  |   |      | 5v       |     |     |
		 |  12 |   8 |    SDA.0 | ALT5 | 0 |  3 || 4  |   |      | 5V       |     |     |
		 |  11 |   9 |    SCL.0 | ALT5 | 0 |  5 || 6  |   |      | 0v       |     |     |
		 |   6 |   7 |   GPIO.7 | ALT3 | 0 |  7 || 8  | 0 | ALT5 | TxD3     | 15  | 198 |
		 |     |     |       0v |      |   |  9 || 10 | 0 | ALT5 | RxD3     | 16  | 199 |
		 |   1 |   0 |     RxD2 | ALT5 | 0 | 11 || 12 | 0 | ALT3 | GPIO.1   | 1   | 7   |
		 |   0 |   2 |     TxD2 | ALT5 | 0 | 13 || 14 |   |      | 0v       |     |     |
		 |   3 |   3 |     CTS2 | ALT3 | 0 | 15 || 16 | 0 | ALT4 | GPIO.4   | 4   | 19  |
		 |     |     |     3.3v |      |   | 17 || 18 | 0 | ALT4 | GPIO.5   | 5   | 18  |
		 |  15 |  12 |     MOSI | ALT5 | 0 | 19 || 20 |   |      | 0v       |     |     |
		 |  16 |  13 |     MISO | ALT5 | 0 | 21 || 22 | 0 | ALT3 | RTS2     | 6   | 2   |
		 |  14 |  14 |     SCLK | ALT5 | 0 | 23 || 24 | 0 | ALT5 | CE0      | 10  | 13  |
		 |     |     |       0v |      |   | 25 || 26 | 0 | ALT3 | GPIO.11  | 11  | 10  |
		 +-----+-----+----------+------+---+---LEDs---+---+------+----------+-----+-----+
		 |  17 |  30 | STAT-LED |  OUT | 0 | 27 || 28 |   |      | PWR-LED  |     |     |
		 +-----+-----+----------+------+---+-----+----+---+------+----------+-----+-----+
		 | H2+ | wPi |   Name   | Mode | V | Physical | V | Mode | Name     | wPi | H2+ |
		 +-----+-----+----------+------+--Orange Pi Zero--+---+------+---------+-----+--+
		 
		 
		 ###===========Ejemplo de la respuesta del comando 'gpio readall'=============###
		 #						Para una Orange Pi PC+ (H3)								#
		 +																				+		 
		 +-----+-----+----------+------+---+-Orange Pi+---+---+------+---------+-----+--+
		 | BCM | wPi |   Name   | Mode | V | Physical | V | Mode | Name     | wPi | BCM |
		 +-----+-----+----------+------+---+----++----+---+------+----------+-----+-----+
		 |     |     |     3.3v |      |   |  1 || 2  |   |      | 5v       |     |     |
		 |  12 |   8 |    SDA.0 | ALT3 | 0 |  3 || 4  |   |      | 5V       |     |     |
		 |  11 |   9 |    SCL.0 | ALT3 | 0 |  5 || 6  |   |      | 0v       |     |     |
		 |   6 |   7 |   GPIO.7 |  OUT | 0 |  7 || 8  | 0 | ALT3 | TxD3     | 15  | 13  |
		 |     |     |       0v |      |   |  9 || 10 | 0 | ALT3 | RxD3     | 16  | 14  |
		 |   1 |   0 |     RxD2 | ALT3 | 0 | 11 || 12 | 0 | ALT3 | GPIO.1   | 1   | 110 |
		 |   0 |   2 |     TxD2 | ALT3 | 0 | 13 || 14 |   |      | 0v       |     |     |
		 |   3 |   3 |     CTS2 | ALT3 | 0 | 15 || 16 | 0 | ALT3 | GPIO.4   | 4   | 68  |
		 |     |     |     3.3v |      |   | 17 || 18 | 0 | ALT3 | GPIO.5   | 5   | 71  |
		 |  64 |  12 |     MOSI | ALT3 | 0 | 19 || 20 |   |      | 0v       |     |     |
		 |  65 |  13 |     MISO | ALT3 | 0 | 21 || 22 | 0 | ALT3 | RTS2     | 6   | 2   |
		 |  66 |  14 |     SCLK | ALT3 | 0 | 23 || 24 | 0 | ALT3 | CE0      | 10  | 67  |
		 |     |     |       0v |      |   | 25 || 26 | 0 | ALT3 | GPIO.11  | 11  | 21  |
		 |  19 |  30 |    SDA.1 | ALT3 | 0 | 27 || 28 | 0 | ALT3 | SCL.1    | 31  | 18  |
		 |   7 |  21 |  GPIO.21 | ALT3 | 0 | 29 || 30 |   |      | 0v       |     |     |
		 |   8 |  22 |  GPIO.22 | ALT3 | 0 | 31 || 32 | 0 | ALT3 | RTS1     | 26  | 200 |
		 |   9 |  23 |  GPIO.23 | ALT3 | 0 | 33 || 34 |   |      | 0v       |     |     |
		 |  10 |  24 |  GPIO.24 | ALT3 | 0 | 35 || 36 | 0 | ALT3 | CTS1     | 27  | 201 |
		 |  20 |  25 |  GPIO.25 | ALT3 | 0 | 37 || 38 | 0 | ALT3 | TxD1     | 28  | 198 |
		 |     |     |       0v |      |   | 39 || 40 | 0 | ALT3 | RxD1     | 29  | 199 |
		 +-----+-----+----------+------+---+----++----+---+------+----------+-----+-----+
		 | BCM | wPi |   Name   | Mode | V | Physical | V | Mode | Name     | wPi | BCM |
		 +-----+-----+----------+------+---+-Orange Pi+---+------+----------+-----+-----+


		 
	'Configurar estado inicial de los pins'	 
	# El pin usado para conectar el relé sera el pin 7 dado que nace en estado bajo (0.03v).
	# Con el comando 'gpio readall' en la columna 'wpi' nos indicara el numero del gpio a usar, por ejemplo el (gpio 7)
	# Editar archivo '/etc/rc.local' y agregar siguiente texto antes de la linea 'exit 0' y editarlo según convenga:
	sudo nano /etc/rc.local
	
		#====================#
		#    GPIO CONFIG     #
		#====================#

		# INSTRUCCIONES:
		# 1. INSTALA DEL REPOSITORIO CORRESPONDIENTE A TU MPU (H2,, H3 O H5)
		#    H2+   = https://github.com/xpertsavenue/WiringOP-Zero
		#    H3-H5 = https://github.com/kazukioishi/WiringOP
		#
		# 2. USA COMANDO 'gpio readall' PARA SABER QUE GPIO ESTA ASIGNADO A CADA PIN
		#
		# 3. INDICA EL NUMERO DEL GPIO QUE VAS A USAR TAL COMO INDICA EL EJEMPLO
		#    COPIA LA ESTRUCTURA POR CADA UNO DE LOS PINES QUE QUIERES USAR.
		#
		# 4. SI NECESITAS CAMBIAR EL ESTADO INICIAL DE UN PIN PUEDES AGREGAR LINEA
		#    SIGUIENTE. DONDE 'X' ES EL PIN E 'Y' ES EL ESTADO.
		#    sudo gpio write x y
		
		sudo gpio mode 7 out

		#--FIN--#

		
'Plugins Octoprint'

	'Cambiar permisos directorio ./venv'
	# Si en la sección 'Plugin Manager' aparece un mensaje de error de acceso al comando `pip` debemos
	# dar acceso total así:
	sudo chmod -R 777 ~/OctoPrint/venv/


    'Python 3 Check'    
    URL Instalación: https://github.com/jneilliii/OctoPrint-Python3PluginCompatibilityCheck/archive/master.zip

    'Auto bed leveling expert'
    
    'Bed Level Visualizer'
        Dependencias NumPy: pip install numpy

	'Firmware Updater'			https://plugins.octoprint.org/plugins/firmwareupdater/

        `CHIPs LPC1768`
        Paths: /home/orangeprint/share/firmware		

        `Basadas en Arduino`
		sudo apt install avrdude		
		    `Configurar`
			Path to avrdude:	/usr/bin/avrdude

	'GCODE System Commands'
    # Actualmente no soporta Python 3, alternativa " LED Strip Control"   
    https://github.com/kantlivelong/OctoPrint-GCodeSystemCommands
    Descarga e instalacion Manual
    https://codeload.github.com/kantlivelong/OctoPrint-GCodeSystemCommands/tar.gz/0.1.1
		`Configurar`
        Activar en: Plugins Manager
		OCTO80	gpio write 7 0
		OCTO81	gpio write 7 1

    
		
	'GcodeEditor'				https://github.com/ieatacid/OctoPrint-GcodeEditor
	
	'Navbar Temp'				https://github.com/imrahil/OctoPrint-NavbarTemp
	
	'OctoPrint-FloatingNavbar'	https://plugins.octoprint.org/plugins/floatingnavbar/

	'PSU CONTROL'				https://plugins.octoprint.org/plugins/psucontrol/
		`Configurar`
			`Switching`
			Switching Method:	System Command
			On System Command:	gpio write 7 1
			Off System Command:	gpio write 7 0
			Enable switching with G-Code commands.	CHECK
			On G-Code Command: 	OCTO81
			Off G-code Command	OCTO80


			`Power Off Options`
			Automatically turn PSU OFF when idle 	CHECK
			Idle TimeOut	10

	'Preheat Button'			https://github.com/marian42/octoprint-preheat
		`Configurar`
		Fallback temperature forr tool preheating	200		# Para PLA 
		Fallback temperature forr bed preheating		 50		# "		"
		
	'Simple Emergency Stop'		https://github.com/BrokenFire/OctoPrint-SimpleEmergencyStop	
		`Configurar`
		Emergency GCODE:	OCTO80
		
	'System Command Editor'		https://github.com/Salandora/OctoPrint-SystemCommandEditor
		`Configurar`
		Name:		Impresora On
		Action:		Activar Rele de la Fuente
		Command:	gpio write 7 1
		
		Name:		Impresora OFF
		Action:		Desactivar Rele de la Fuente
		Command:	gpio write 7 0
		
		Name:		WebCam ON
		Action:		Iniciar Servidor Motion
		Command:	sudo /etc/init.d/motion start

		Name:		WebCam OFF
		Action:		Detener Servidor Motion
		Command:	sudo service motion stop|restart || sudo killall motion
		
		Name:		WebCam Restart
		Action:		Reiniciar Servidor Motion
		Command:	sudo service motion restart

    'OctoPrint-BLTouch'		
	'TouchUI'					http://plugins.octoprint.org/plugins/touchui/
    'Themeify'
    'Prusa Leveling Guide'
    'Terminal Commands Extended'    

		
'LIMPIAR HISTORIAL Y CACHES'


	'Borrar paquetes parciales'
	sudo apt autoclean
	
	'Eliminar paquetes *.deb de las instalaciones'
	sudo apt clean
		
	'Eliminar Paquetes y dependencias que el sistema ya no necesita'
	sudo apt autoremove
	sudo apt purge
		
	'Eliminar datos locales innecesarios'
	sudo apt install localepurge
	
	'Historial de comandos'
	history -c
		
	*Borrar a mano:
	sudo nano /home/usuario/.bash_history


'========UTILIDADES=========='

'Cambiar contraseña Usuario'
	sudo passwd usuario

'Eliminar contraseña Usuario'
	sudo passwd usuario -d
	
'Ejecutar para el proximo arranque la adaptacion automatica de tamaño de la particion'
	sudo systemctl enable resize2fs
	reboot

	# Si no funciona probar:
	sudo systemctl enable resize2fs
	sudo update-rc.d resize2fs defaults 	
	reboot
	
'Copia Seguridad SD por USB'
	# Conectar PEN o HDD al USB
	# Para Saber si lo detecto y ver la partición 
	fDisk -l
	
	# Crear Directorio
	mkdir /media/USB
	# Montar USB
	mount /dev/sda1	/media/USB		# Donde sda1 el la partición que queremos montar que vimos en el fdisk -l
	
	# Desmontar Unidades a copiar
	sudo umount /dev/mmcblk0p1
	
	# Iniciar Copia de Seguridad
	sudo dd if=/dev/mmcblk0 |pv|dd of=/media/USB/mibackup.img bs=1M
	
'Cambiar Tamaño Particion dentro de una *.img'	
https://softwarebakery.com/shrinking-images-on-linux

	# En una maquina Linux, cargar la imagen "*.img":
	sudo modprobe loop
	sudo losetup -f
	sudo losetup /dev/loop0 myimage.img
	sudo partprobe /dev/loop0
	
	# Contraer partición con GParted
	sudo gparted /dev/loop0
	https://softwarebakery.com/shrinking-images-on-linux/gparted-01.png
	
	# Desmontar la imagen
	sudo losetup -d /dev/loop0
	
	# Saber los bloque y el tamaño de bloques del espacio particionado
	sudo losetup -d /dev/loop0
	
	# Recortar el espacio sin particionar de la imagen
	truncate --size=$[(????????+1)*512] myimage.img
	
'=========FIN=========='	
	
'URLs de Información:'

	`Octoprint:` 	https://github.com/foosel/OctoPrint/wiki/Setup-on-a-Raspberry-Pi-running-Raspbian
	
	`Motion:`		https://github.com/Motion-Project/motion
					https://goo.gl/18E1GA
					http://www.orangepi.org/Docs/Webcams.html
	
	`WebCam Format`	https://github.com/raspberrypi/firmware/issues/347
					https://superuser.com/questions/639738/how-can-i-list-the-available-video-modes-for-a-usb-webcam-in-linux
					
	`Samba y cifs`	https://help.ubuntu.com/community/Samba/SambaClientGuide
					https://help.ubuntu.com/community/MountWindowsSharesPermanently
					https://www.upv.es/contenidos/INFOACCESO/infoweb/infoacceso/dat/724147normalc.html
					
	`GPIO`			http://www.orangepi.org/orangepibbsen/forum.php?mod=viewthread&tid=1308&highlight=gpio
					https://diyprojects.io/orange-pi-armbian-install-wiringop-library-wiringpi-equivalent/#.WZf5iuntbRZ
					
	`resize2fs`		https://forum.armbian.com/topic/487-reinitiate-sd-card-resize-on-boot/?do=findComment&comment=28814
					https://forum.armbian.com/topic/3783-orange-pi-lite-freezes/?do=findComment&comment=27487
	
    `Mover. Copiar, Renombrar` https://ed.team/blog/mover-copiar-y-renombrar-directorios-en-linux
				
	`Sintaxis MarkDown`	https://markdown.es/sintaxis-markdown/
					
# Enlaces cortos:					
[alias_python]: https://www.enmimaquinafunciona.com/pregunta/24690/por-defecto-python-comando-a-usar-python-3

[alias_pip]: https://stackoverflow.com/questions/44455001/how-to-change-pip3-command-to-be-pip

[virtual_python3]: https://help.dreamhost.com/hc/es/articles/115000695551-Instalar-y-usar-virtualenv-con-Python-3



